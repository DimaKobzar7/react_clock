{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","setState","prevProps","prevClockName","clockName","currentClockName","props","console","debug","info","toLocaleTimeString","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,SAC1B,OAVP,gCAaE,SAAmBM,GACjB,IAAmBC,EAAkBD,EAA7BE,UACWC,EAAqBP,KAAKQ,MAArCF,UAEJD,IAAkBE,GAEpBE,QAAQC,MAAR,uBAA8BL,EAA9B,eAAkDE,IAIpDE,QAAQE,KAAKX,KAAKJ,MAAMC,MAAMe,wBAvBlC,kCA0BE,WACEX,OAAOY,cAAcb,KAAKD,WA3B9B,oBA8BE,WACE,IAAQO,EAAcN,KAAKQ,MAAnBF,UACAT,EAAUG,KAAKJ,MAAfC,MAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAGF,YAED,sBAAMQ,UAAU,cAAhB,SACGjB,EAAMe,8BA3CjB,GAA2BG,a,MCD3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAGX,IAAMI,EAAb,4MACEzB,MAAyB,CACvBU,UAAW,UACXgB,UAAU,GAHd,EAMEvB,QAAU,EANZ,EAuBEwB,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKtB,SAAS,CAAEmB,UAAU,KAzB9B,EA4BEI,UAAY,WACV,EAAKvB,SAAS,CAAEmB,UAAU,KA7B9B,uDAQE,WAAqB,IAAD,OAClBtB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEG,UAAWU,QAC1B,MAEHW,SAASC,iBAAiB,cAAe5B,KAAKuB,WAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,aAd5C,kCAiBE,WACEC,SAASE,oBAAoB,cAAe7B,KAAK0B,WACjDC,SAASE,oBAAoB,cAAe7B,KAAKuB,WACjDtB,OAAOY,cAAcb,KAAKD,WApB9B,oBAgCE,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,6CACCd,KAAKJ,MAAM0B,UAAY,cAAC,EAAD,CAAOhB,UAAWN,KAAKJ,MAAMU,mBApC7D,GAAyBS,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.d741df89.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype Props = {\n  clockName: string\n};\n\ntype State = {\n  today: Date\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { clockName: prevClockName } = prevProps;\n    const { clockName: currentClockName } = this.props;\n\n    if (prevClockName !== currentClockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevClockName} to ${currentClockName}`);\n    }\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toLocaleTimeString());\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName } = this.props;\n    const { today } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\ntype State = {\n  clockName: string,\n  hasClock: boolean,\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.showClock);\n    document.removeEventListener('contextmenu', this.hideClock);\n    window.clearInterval(this.timerId);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  showClock = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}